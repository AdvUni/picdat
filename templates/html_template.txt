<!DOCTYPE html>
<html>
<head>
    <title>PicDat</title>
    <script type="text/javascript"
            src="dygraphs/dygraph.js"></script>
    <link rel="stylesheet" type="text/css" href="dygraphs/dygraph.css"/>
</head>

<body>
<h1> PicDat: </h1>
<script type="text/javascript">

    function getAllGraphIndices(chartName) {
        var legend_dashes = document.getElementsByName(chartName);
        var indicesArray = [];
        for (var i = 0, n = legend_dashes.length; i < n; i++) {
            indicesArray.push(i);
        }
        return indicesArray;
    }

    function selectAll(button, chart, name) {
        chart.setVisibility(getAllGraphIndices(name), true);
    }

    function deselectAll(button, chart, name) {
        chart.setVisibility(getAllGraphIndices(name), false);
    }

    function legendFormatter(data) {
        if (data.x == null) {
            // This happens when there's no selection and {legend: 'always'} is set.
            var chartID = data.dygraph.toString().split(' ')[1].split(']')[0];

           return '<br>' + data.series.map(function (series) {

                   // Add a name and a 'onClick' function to legend dashes, to enable graph
                   // selection and deselection by clicking them
                    var oldDash = series.dashHTML;
                    var dashInsertion = 'name="' + chartID + '" onClick="' + chartID +
                        '.setVisibility(' + series.graphIndex + ', ' + !series.isVisible + ');"';
                    var newDash = oldDash.substr(0, oldDash.indexOf(' ')) + ' ' + dashInsertion +
                        ' ' + oldDash.substr(oldDash.indexOf(' ')+1);

                    return newDash + ' ' + series.labelHTML
                }).join('<br>');
        }
        var graphNumber = 0;
        data.series.forEach(function (series) {
            if (series.isVisible) graphNumber++;
        });

        var html = this.getLabels()[0] + ': ' + data.xHTML;

        if (graphNumber > 25) {
            data.series.forEach(function (series) {
                if (series.isHighlighted) {
                    var labeledData = series.labelHTML + ': ' + series.yHTML;
                    labeledData = '<b>' + labeledData + '</b>';
                    html += '<br>' + series.dashHTML + ' ' + labeledData;
                }
            });
        } else {
            data.series.forEach(function (series) {
                if (!series.isVisible) return;
                var labeledData = series.labelHTML + ': ' + series.yHTML;
                if (series.isHighlighted) {
                    labeledData = '<b>' + labeledData + '</b>';
                }
                html += '<br>' + series.dashHTML + ' ' + labeledData;
            });
        }
        return html;
    }

    function barChartPlotter(e) {
        var ctx = e.drawingContext;
        var points = e.points;
        var y_bottom = e.dygraph.toDomYCoord(0);  // see http://dygraphs.com/jsdoc/symbols/Dygraph.html#toDomYCoord

        // This should really be based on the minimum gap
        var bar_width = 2 / 3 * (points[1].canvasx - points[0].canvasx);
        ctx.fillStyle = e.color;

        // Do the actual plotting.
        for (var i = 0; i < points.length; i++) {
            var p = points[i];
            var center_x = p.canvasx;  // center of the bar

            ctx.fillRect(center_x - bar_width / 2, p.canvasy,
                bar_width, y_bottom - p.canvasy);
            ctx.strokeRect(center_x - bar_width / 2, p.canvasy,
                bar_width, y_bottom - p.canvasy);
        }
    }

    function makeChart(divName, csv, chartName, xLabel, yLabel, barChart) {
        var chartDiv = document.createElement('div');
        chartDiv.className = "chart-div";
        chartDiv.id = divName;

        var legendDiv = document.createElement('div');
        legendDiv.className = "legend-div";

        document.body.appendChild(chartDiv);
        document.body.appendChild(legendDiv);

        var plotter = null;
        if (barChart) {
            plotter = barChartPlotter;
        }

        return new Dygraph(
            chartDiv,
            csv,
            {
                xlabel: xLabel,
                ylabel: yLabel,
                title: chartName,
                legend: "always",
                labelsDiv: legendDiv,
                highlightSeriesOpts: {strokeWidth: 2},
                legendFormatter: legendFormatter,
                plotter: plotter,
                drawGapEdgePoints: true,
                pointSize: 3,
                animatedZooms: true,
                fillGraph: true,
                showRoller: !barChart
            }
        );
    }

</script>

