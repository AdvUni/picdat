"""
Is responsible for writing given data into csv files.
"""

import os

__author__ = 'Marie Lohbeck'
__copyright__ = 'Copyright 2017, Advanced UniByte GmbH'


# license notice:
#
# This file is part of PicDat.
# PicDat is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public (at your option) any later version.
#
# PicDat is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with PicDat. If not,
# see <http://www.gnu.org/licenses/>.


def create_csv(csv_filepaths, header_row, value_rows):
    """
    Creates CSV tables from data collected before.
    :param csv_filepaths: the paths, the csv tables generated by this function should be saved.
    :param header_row: table's first row which contains the instance names this table has values
    for.
    :param value_rows: rows of table which contain value material.
    """

    for table in range(len(csv_filepaths)):

        with open(csv_filepaths[table], 'w') as table_file:

            # write first row which contains the headers into csv
            headline = 'time'  # first column in table should label the x-axis
            for instance in header_row[table]:
                headline += ', '
                headline += instance

            # write out line
            table_file.write(headline + os.linesep)

            # write data rows into csv
            # (you have to iterate over a three times interlaced list for this)
            for row in range(len(value_rows[table])):

                row_list = value_rows[table][row]

                data_line = ''

                # write a value from each column into one line
                for entry in row_list[:-1]:
                    data_line += entry
                    data_line += ', '
                data_line += row_list[-1]

                # write out line
                table_file.write(data_line + os.linesep)

        table_file.close()
        print('Wrote chart values into ' + csv_filepaths[table])
